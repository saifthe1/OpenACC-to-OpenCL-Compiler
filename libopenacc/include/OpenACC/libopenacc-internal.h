/*!
 * \addtogroup grp_libopenacc_api_internal Internal
 * @{
 * 
 * \file libopenacc-internal.h
 *
 * \author Tristan Vanderbruggen
 * \date 09/2013
 *
 */

#ifndef __LIB_OPENACC_INTERNAL_H__
#define __LIB_OPENACC_INTERNAL_H__

#define _OPENACC_LIB_INTERNAL         1
#define _OPENACC_LIB_INTERNAL_NAME    "OpenACC LIB for OpenCL in ROSE Compiler"
#define _OPENACC_LIB_INTERNAL_VERSION 201310

#include "OpenACC/libopenacc.h"

//#include "OpenACC/lib-openacc-host-to-device.h"
typedef struct acc_context_t_ * acc_context_t;

typedef acc_kernel_t (* acc_kernel_builder_t) ();

/// Data-structure the compiler use to communicate information to the runtime
typedef struct acc_compiler_data_t_ {
  /// Number of OpenCL kernels
  unsigned num_kernel;

  /*!
   *  Pointers to kernel builders. Kernel builders are function pointer.
   *  Kernel builder are generated at compile time and use the internal API.
   */
  acc_kernel_builder_t * kernel_builders;

  size_t num_ocl_files;
  char ** opencl_files;
  
  char * acc_runtime_dir;
  char * acc_runtime_ocl;

} acc_compiler_data_t;

/// Forward declaration of compiler_data which will be generated by the compiler
extern acc_compiler_data_t compiler_data;

// Internal OpenACC API

/*! \func acc_create_context
 *
 *  Create the context associated to 'region' and 'kernel'
 *
 *  \param region pointer to a parallel region descriptor
 *  \param kernel pointer to a kernel descriptor
 *  \return a non-zero value if an error occured
 */
acc_context_t acc_create_context(acc_parallel_t region, acc_kernel_t kernel);

/*!
 *  This functiom is generated by the compiler and initialize 'acc_runtime'
 */
void acc_application_specific_init();

/*!
 *  \brief Get the list of platforms and devices from OpenCL
 */
void acc_collect_ocl_devices();

/*!
 *  \brief Load sources of OpenCL C kernels from compiler generated file names
 */
void acc_load_ocl_sources();

/*!
 *  \brief Sorts collected OpenCL Devices
 */
void acc_init_devices();

/*!
 *  \brief Retrieved information from OS environment variables.
 */
void acc_init_defaults();

char * readSource(const char * sourceFilename);

#endif /* __LIB_OPENACC_INTERNAL_H__ */ /** @} */

